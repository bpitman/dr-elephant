#
# Copyright 2016 LinkedIn Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Application calls
GET        /:realm/                              controllers.Application.dashboard(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/help                         controllers.Application.oldHelp(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/search                       controllers.Application.search(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/compare                      controllers.Application.compare(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/flowhistory                  controllers.Application.oldFlowHistory(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/jobhistory                   controllers.Application.oldJobHistory(realm: com.linkedin.drelephant.RealmContext)

# Routes for new user interface

GET        /:realm/newflowhistory               controllers.Application.flowHistory(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/newjobhistory                controllers.Application.jobHistory(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/newhelp                      controllers.Application.help(realm: com.linkedin.drelephant.RealmContext)

# Rest calls
GET        /:realm/rest/job                     controllers.Application.restAppResult(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/jobexec                 controllers.Application.restJobExecResult(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/flowexec                controllers.Application.restFlowExecResult(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/search                  controllers.Application.restSearch(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/rest/compare                 controllers.Application.restCompare(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/rest/flowgraphdata           controllers.Application.restFlowGraphData(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/jobgraphdata            controllers.Application.restJobGraphData(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/jobmetricsgraphdata     controllers.Application.restJobMetricsGraphData(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/flowmetricsgraphdata    controllers.Application.restFlowMetricsGraphData(realm: com.linkedin.drelephant.RealmContext, id: String)
GET        /:realm/rest/dashboard-summaries     controllers.api.v1.Web.restDashboardSummaries(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/rest/workflow-summaries      controllers.api.v1.Web.restWorkflowSummariesForUser(realm: com.linkedin.drelephant.RealmContext, username: String)
GET        /:realm/rest/job-summaries           controllers.api.v1.Web.restJobSummariesForUser(realm: com.linkedin.drelephant.RealmContext, username: String)
GET        /:realm/rest/application-summaries   controllers.api.v1.Web.restApplicationSummariesForUser(realm: com.linkedin.drelephant.RealmContext, username: String)
GET        /:realm/rest/workflows               controllers.api.v1.Web.restWorkflowFromFlowId(realm: com.linkedin.drelephant.RealmContext, workflowid: String)
GET        /:realm/rest/jobs                    controllers.api.v1.Web.restJobFromJobId(realm: com.linkedin.drelephant.RealmContext, jobid: String)
GET        /:realm/rest/applications            controllers.api.v1.Web.restApplicationFromApplicationId(realm: com.linkedin.drelephant.RealmContext, applicationid: String)
GET        /:realm/rest/search-options          controllers.api.v1.Web.restSearchOptions(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/rest/search-results          controllers.api.v1.Web.search(realm: com.linkedin.drelephant.RealmContext)
GET        /:realm/rest/resourceusagedatabyuser controllers.Application.restResourceUsageDataByUser(realm: com.linkedin.drelephant.RealmContext, startTime: String, endTime: String)

# Metrics calls
GET        /ping                                controllers.MetricsController.ping()
GET        /metrics                             controllers.MetricsController.index()
GET        /healthcheck                         controllers.MetricsController.healthcheck()

# Map static resources from the /public folder to the /assets URL path
GET        /assets/*file                        controllers.Assets.at(path="/public", file)
GET        /new                                 controllers.Application.serveAsset(path="index.html")
GET        /new/*path                           controllers.Application.serveAsset(path)
